 public class NameInputType : InputObjectGraphType
    {
        public NameInputType()
        {
            Name = "nameInput";
            Field<NonNullGraphType<StringGraphType>>("FirstName");
            Field<NonNullGraphType<StringGraphType>>("MiddleName");
            Field<NonNullGraphType<StringGraphType>>("LastName");
        }
    }


public AppMutation(IEmployeeRepo repository)
        {
            Field<EmployeeType>(
                "createEmployee",
                arguments: new QueryArguments(new QueryArgument<NonNullGraphType<EmployeeInputType>>
                { Name = "employee" }),
                resolve: context =>
                {
                    var employee = context.GetArgument<Employee>("employee");
                    return repository.AddEmployee(employee);
                }
            );

            Field<BooleanGraphType>(
                "deleteEmployee",
                arguments: new QueryArguments(new QueryArgument<NonNullGraphType<LongGraphType>> 
                { Name = "employeeId" }),
                resolve: context =>
                {
                    var employeeId = context.GetArgument<long>("employeeId");
                    repository.DeleteEmployeeById(employeeId);
                    return true;
                }
            );
        }



//mutation($employee: employeeInput!){
//    createEmployee(employee:$employee){
//        firstName,
//    lastName,
//    middleName,
//    dOB,
//  }
//}
//{
//    "employee": {
//        "employeeName": {
//            "firstName": "Parameswari",
//      "lastName": "",
//      "middleName": ""
//        },
//    "dOB": "1970-12-02"
//    }
//}


mutation($employeeId:Long!){
  deleteEmployee(employeeId:$employeeId)
  
}


{
  "employeeId": 2
}
